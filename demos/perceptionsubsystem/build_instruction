within src/darknet_ros/darnet_ros/
Note: check whether the darknet has /data folder, if not, you may need to re-download the repo from darknet_ros, and change the config, launch files as mentioned below

yolo net config:
1. add .cfg and .weights
2. within /cfg, run "dos2unix cross-hands.cfg" (convert it to unix format)

config:
1. modify "ros.yaml" with correct camera topic
2. create "yolo-hand.yaml" to configure the model files

launch:
1. modify "darknet_ros.launch" with correct yaml file



to run on GPU: !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
cuda 10.2 + cudnn 7.6.5 (not support cudnn8!!!!!!!!!!!!!)

install cuda 10.2:
Note: if there is any usr/local/cuda directory, remove it before re-install
Note: no need to set up driver, when install cuda, it will set up driver automatically
Note: the libcudnn7 is installed in the /usr/local/cuda-10.2, if libcudnn exists, copy to /usr/local/cuda/lib64, also copy cudnn.h as well.

https://medium.com/@exesse/cuda-10-1-installation-on-ubuntu-18-04-lts-d04f89287130

check cuda version:
nvcc -V


install cudnn separately:
Goto page https://developer.nvidia.com/rdp/cudnn-download
Download all three .deb: runtime/developer/code sample

$ sudo dpkg -i libcudnn7_7.6.5.32–1+cuda10.1_amd64.deb (the runtime library),

$ sudo dpkg -i libcudnn7-dev_7.6.5.32–1+cuda10.1_amd64.deb (the developer library), and

$ sudo dpkg -i libcudnn7-doc_7.6.5.32–1+cuda10.1_amd64.deb (the code samples).

!! copy cudnn.h (in usr/include) to (usr/local/cuda/include)
!! copy libcudnn* (in usr/lib/x86_...) to (/usr/local/cuda/lib64/)


change Makefile in /darknet
GPU = 1
CUDNN =1
OPENCV = 1
-gencode (75)

run "make" in /darknet

Change CmakeList.txt in /darknet_ros
-gencode = 75

run "catkin_make -DCMAKE_BUILD_TYPE=Release" in /catkin_ws

GPU is ready!!!!!!!!!!!!!!!!!!!!!!!
